{"version":3,"sources":["../../server/controllers/Loans.js"],"names":["loadLoans","req","res","body","status","undefined","repaid","json","quickcredit","loans","loadByCriteria","loanById","loanInfo","response","params","id","data","message","loanid","specificLoan","find","loan","parseInt","apply","user","amount","tenor","userInfo","users","token","email","length","createdOn","Date","interest","paymentInstallement","balance","parseFloat","push","firstName","lastName","toggleStatus","loanParam","loanIndex","findIndex","applications","parameters","query","loanApplication"],"mappings":"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","sourcesContent":["import quickcredit from '../models/database';\r\nimport { isVerified } from '../helpers/userAccount';\r\nimport { hasLoan, installementCalculator, interestCalculator } from '../helpers/Loans';\r\n\r\nexport const loadLoans = (req, res) => {\r\n  if (req.body.status === undefined && req.body.repaid === undefined) {\r\n    res.json(quickcredit.loans);\r\n  } else {\r\n    loadByCriteria(req, res);\r\n  }\r\n};\r\nexport const loanById = (req, res) => {\r\n  const loanInfo = quickcredit.loans;\r\n  let response = null;\r\n  if (req.params.id === undefined) {\r\n    response = {\r\n      status: 400,\r\n      data: {\r\n        message: 'bad request, id must be defined',\r\n      },\r\n    };\r\n  } else {\r\n    const loanid = req.params.id;\r\n    const specificLoan = loanInfo.find(loan => loan.id === parseInt(loanid));\r\n    if (specificLoan === undefined) {\r\n      response = {\r\n        status: 200,\r\n        data: {\r\n          message: 'no data found',\r\n        },\r\n      };\r\n    } else {\r\n      response = {\r\n        status: 200,\r\n        data: specificLoan,\r\n      };\r\n    }\r\n  }\r\n  res.status(response.status).json(response);\r\n};\r\nexport const apply = (req, res) => {\r\n  const loan = req.body;\r\n  let response = null;\r\n  if (loan.user === undefined || loan.amount === undefined || loan.tenor === undefined) {\r\n    response = {\r\n      status: 400,\r\n      data: {\r\n        message: 'Bad request, there might be some missing parameters',\r\n      },\r\n    };\r\n  } else {\r\n  // increment loan id for the next loan\r\n    const userInfo = quickcredit.users.find(user => user.token === loan.user);\r\n    // push or add loan to an array of loans\r\n    if (!isVerified(loan.user)) {\r\n      response = {\r\n        status: 200,\r\n        data: {\r\n          message: 'sorry your account not yet verified, wait for a moment',\r\n        },\r\n      };\r\n    } else if (hasLoan(loan.user)) {\r\n      response = {\r\n        status: 200,\r\n        data: {\r\n          message: 'sorry you already have a loan',\r\n        },\r\n      };\r\n    } else {\r\n      loan.user = userInfo.email;\r\n      loan.id = quickcredit.loans.length + 1;\r\n      loan.repaid = false;\r\n      loan.status = 'pending';\r\n      loan.createdOn = new Date();\r\n      loan.interest = interestCalculator(loan.amount);\r\n      loan.status = 'pending';\r\n      loan.paymentInstallement = installementCalculator(loan.amount, loan.tenor);\r\n      loan.balance = parseFloat(loan.amount) + parseFloat(loan.interest);\r\n      quickcredit.loans.push(loan);\r\n      // response generate\r\n      response = {\r\n        status: 200,\r\n        data: {\r\n          id: loan.id,\r\n          user: loan.email,\r\n          firstName: userInfo.firstName,\r\n          lastName: userInfo.lastName,\r\n          createdOn: new Date(),\r\n          status: 'pending',\r\n          repaid: false,\r\n          tenor: loan.tenor,\r\n          amount: loan.amount,\r\n          paymentInstallement: loan.paymentInstallement,\r\n          balance: loan.balance,\r\n          interest: loan.interest,\r\n        },\r\n      };\r\n    }\r\n  }\r\n  res.status(response.status).json(response);\r\n};\r\nexport const toggleStatus = (req, res) => {\r\n  const loanParam = req.params;\r\n  let response = null;\r\n  let loanInfo = null;\r\n  // response generate\r\n  if( req.body.status === undefined) {\r\n    response = {\r\n      status: 400,\r\n      data: {\r\n        message: \"status must be defined\",\r\n      },\r\n    };  \r\n  }else {\r\n      loanInfo = quickcredit.loans.find(loan => loan.id === parseInt(loanParam.id));\r\n    if(loanInfo === undefined) {\r\n      response = {\r\n        status: 200,\r\n        data: {\r\n          message: `no data found for loan id ${loanParam.id}`,\r\n        },\r\n      };  \r\n    } else {\r\n      const loanIndex = quickcredit.loans.findIndex(loan => loan.id === parseInt(loanParam.id));\r\n      quickcredit.loans[loanIndex].status = req.body.status;\r\n      response = {\r\n        status: 200,\r\n        data: {\r\n          id: loanInfo.id,\r\n          user: loanInfo.email,\r\n          createdOn: loanInfo.createdOn,\r\n          status: loanInfo.status,\r\n          repaid: loanInfo.repaid,\r\n          tenor: loanInfo.tenor,\r\n          amount: loanInfo.amount,\r\n          paymentInstallement: loanInfo.paymentInstallement,\r\n          balance: loanInfo.balance,\r\n          interest: loanInfo.interest,\r\n        },\r\n      };\r\n    }\r\n}\r\n  res.status(response.status).json(response);\r\n};\r\nexport const applications = (req, res) => {\r\n  const parameters = req.query;\r\n  let loanApplication = null;\r\n  if (parameters.status === undefined && parameters.repaid === undefined) {\r\n    loanApplication = quickcredit.loans;\r\n  } else {\r\n    loanApplication = quickcredit.loans.find(loan => loan.status === parameters.status && loan.repaid === (parameters.repaid === 'true'));\r\n  }\r\n  res.json(loanApplication);\r\n};\r\n"],"file":"Loans.js"}