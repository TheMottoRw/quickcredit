{"version":3,"sources":["../../server/controllers/Loans.js"],"names":["loadByCriteria","req","res","response","criterias","body","status","undefined","repaid","data","message","loan","quickcredit","loans","find","debt","json","loadLoans","loanById","loanInfo","params","id","loanid","specificLoan","parseInt","apply","user","amount","tenor","userInfo","users","token","length","balance","createdOn","Date","push","firstName","lastName","email","parseFloat","paymentInstallement","interest","toggleStatus","loanParam","query","applications","parameters","loanApplication"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AACO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC1C,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAMC,SAAS,GAAGH,GAAG,CAACI,IAAtB,CAF0C,CAI1C;;AACA,MAAID,SAAS,CAACE,MAAV,KAAqBC,SAArB,IAAkCH,SAAS,CAACI,MAAV,KAAqBD,SAA3D,EAAsE;AACpEJ,IAAAA,QAAQ,GAAG;AACTG,MAAAA,MAAM,EAAE,GADC;AAETG,MAAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAE;AADL;AAFG,KAAX;AAMD,GAPD,MAOO;AACL,QAAMC,IAAI,GAAGC,qBAAYC,KAAZ,CAAkBC,IAAlB,CAAuB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACT,MAAL,KAAgBF,SAAS,CAACE,MAA1B,IAAoCS,IAAI,CAACP,MAAL,KAAgBJ,SAAS,CAACI,MAAlE;AAAA,KAA3B,CAAb;;AACA,QAAIG,IAAI,KAAKJ,SAAb,EAAwB;AACtBJ,MAAAA,QAAQ,GAAG;AACTG,QAAAA,MAAM,EAAE,GADC;AAETG,QAAAA,IAAI,EAAE;AACJC,UAAAA,OAAO,EAAE;AADL;AAFG,OAAX;AAMD,KAPD,MAOO;AACP;AACEP,MAAAA,QAAQ,GAAG;AACTG,QAAAA,MAAM,EAAE,GADC;AAETG,QAAAA,IAAI,EAAEE;AAFG,OAAX;AAID;AACF;;AACDT,EAAAA,GAAG,CAACI,MAAJ,CAAWH,QAAQ,CAACG,MAApB,EAA4BU,IAA5B,CAAiCb,QAAjC;AACD,CA9BM;;;;AA+BA,IAAMc,SAAS,GAAG,SAAZA,SAAY,CAAChB,GAAD,EAAMC,GAAN,EAAc;AACrC,MAAID,GAAG,CAACI,IAAJ,CAASC,MAAT,KAAoBC,SAApB,IAAiCN,GAAG,CAACI,IAAJ,CAASG,MAAT,KAAoBD,SAAzD,EAAoE;AAClEL,IAAAA,GAAG,CAACc,IAAJ,CAASJ,qBAAYC,KAArB;AACD,GAFD,MAEO;AACLb,IAAAA,cAAc,CAACC,GAAD,EAAMC,GAAN,CAAd;AACD;AACF,CANM;;;;AAOA,IAAMgB,QAAQ,GAAG,SAAXA,QAAW,CAACjB,GAAD,EAAMC,GAAN,EAAc;AACpC,MAAMiB,QAAQ,GAAGP,qBAAYC,KAA7B;AACA,MAAIV,QAAQ,GAAG,IAAf;;AACA,MAAIF,GAAG,CAACmB,MAAJ,CAAWC,EAAX,KAAkBd,SAAtB,EAAiC;AAC/BJ,IAAAA,QAAQ,GAAG;AACTG,MAAAA,MAAM,EAAE,GADC;AAETG,MAAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAE;AADL;AAFG,KAAX;AAMD,GAPD,MAOO;AACL,QAAMY,MAAM,GAAGrB,GAAG,CAACmB,MAAJ,CAAWC,EAA1B;AACA,QAAME,YAAY,GAAGJ,QAAQ,CAACL,IAAT,CAAc,UAAAH,IAAI;AAAA,aAAIA,IAAI,CAACU,EAAL,KAAYG,QAAQ,CAACF,MAAD,CAAxB;AAAA,KAAlB,CAArB;;AACA,QAAIC,YAAY,KAAKhB,SAArB,EAAgC;AAC9BJ,MAAAA,QAAQ,GAAG;AACTG,QAAAA,MAAM,EAAE,GADC;AAETG,QAAAA,IAAI,EAAE;AACJC,UAAAA,OAAO,EAAE;AADL;AAFG,OAAX;AAMD,KAPD,MAOO;AACLP,MAAAA,QAAQ,GAAG;AACTG,QAAAA,MAAM,EAAE,GADC;AAETG,QAAAA,IAAI,EAAEc;AAFG,OAAX;AAID;AACF;;AACDrB,EAAAA,GAAG,CAACI,MAAJ,CAAWH,QAAQ,CAACG,MAApB,EAA4BU,IAA5B,CAAiCb,QAAjC;AACD,CA5BM;;;;AA6BA,IAAMsB,KAAK,GAAG,SAARA,KAAQ,CAACxB,GAAD,EAAMC,GAAN,EAAc;AACjC,MAAMS,IAAI,GAAGV,GAAG,CAACI,IAAjB;AACA,MAAIF,QAAQ,GAAG,IAAf;;AACA,MAAIQ,IAAI,CAACe,IAAL,KAAcnB,SAAd,IAA2BI,IAAI,CAACgB,MAAL,KAAgBpB,SAA3C,IAAwDI,IAAI,CAACiB,KAAL,KAAerB,SAA3E,EAAsF;AACpFJ,IAAAA,QAAQ,GAAG;AACTG,MAAAA,MAAM,EAAE,GADC;AAETG,MAAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAE;AADL;AAFG,KAAX;AAMD,GAPD,MAOO;AACP;AACE,QAAMmB,QAAQ,GAAGjB,qBAAYkB,KAAZ,CAAkBhB,IAAlB,CAAuB,UAAAY,IAAI;AAAA,aAAIA,IAAI,CAACK,KAAL,KAAepB,IAAI,CAACe,IAAxB;AAAA,KAA3B,CAAjB;;AACAf,IAAAA,IAAI,CAACU,EAAL,GAAUT,qBAAYC,KAAZ,CAAkBmB,MAAlB,GAA2B,CAArC;AACArB,IAAAA,IAAI,CAACsB,OAAL,GAAetB,IAAI,CAACgB,MAApB;AACAhB,IAAAA,IAAI,CAACH,MAAL,GAAc,KAAd;AACAG,IAAAA,IAAI,CAACL,MAAL,GAAc,SAAd;AACAK,IAAAA,IAAI,CAACuB,SAAL,GAAiB,IAAIC,IAAJ,EAAjB,CAPK,CAQL;;AACA,QAAI,CAAC,6BAAWxB,IAAI,CAACe,IAAhB,CAAL,EAA4B;AAC1BvB,MAAAA,QAAQ,GAAG;AACTG,QAAAA,MAAM,EAAE,GADC;AAETG,QAAAA,IAAI,EAAE;AACJC,UAAAA,OAAO,EAAE;AADL;AAFG,OAAX;AAMD,KAPD,MAOO,IAAI,oBAAQC,IAAI,CAACe,IAAb,CAAJ,EAAwB;AAC7BvB,MAAAA,QAAQ,GAAG;AACTG,QAAAA,MAAM,EAAE,GADC;AAETG,QAAAA,IAAI,EAAE;AACJC,UAAAA,OAAO,EAAE;AADL;AAFG,OAAX;AAMD,KAPM,MAOA;AACLE,2BAAYC,KAAZ,CAAkBuB,IAAlB,CAAuBzB,IAAvB,EADK,CAEL;;;AACAR,MAAAA,QAAQ,GAAG;AACTG,QAAAA,MAAM,EAAE,GADC;AAETG,QAAAA,IAAI,EAAE;AACJY,UAAAA,EAAE,EAAEV,IAAI,CAACU,EADL;AAEJK,UAAAA,IAAI,EAAEG,QAAQ,CAACE,KAFX;AAGJM,UAAAA,SAAS,EAAER,QAAQ,CAACQ,SAHhB;AAIJC,UAAAA,QAAQ,EAAET,QAAQ,CAACS,QAJf;AAKJC,UAAAA,KAAK,EAAEV,QAAQ,CAACU,KALZ;AAMJL,UAAAA,SAAS,EAAE,IAAIC,IAAJ,EANP;AAOJ7B,UAAAA,MAAM,EAAE,SAPJ;AAQJE,UAAAA,MAAM,EAAE,KARJ;AASJoB,UAAAA,KAAK,EAAEjB,IAAI,CAACiB,KATR;AAUJD,UAAAA,MAAM,EAAEa,UAAU,CAAC7B,IAAI,CAACgB,MAAN,CAVd;AAWJc,UAAAA,mBAAmB,EAAE,mCAAuB9B,IAAI,CAACgB,MAA5B,EAAoChB,IAAI,CAACiB,KAAzC,CAXjB;AAYJK,UAAAA,OAAO,EAAEO,UAAU,CAAC7B,IAAI,CAACgB,MAAN,CAZf;AAaJe,UAAAA,QAAQ,EAAE,+BAAmB/B,IAAI,CAAC+B,QAAxB;AAbN;AAFG,OAAX;AAkBD;AACF;;AACDxC,EAAAA,GAAG,CAACI,MAAJ,CAAWH,QAAQ,CAACG,MAApB,EAA4BU,IAA5B,CAAiCb,QAAjC;AACD,CAzDM;;;;AA0DA,IAAMwC,YAAY,GAAG,SAAfA,YAAe,CAAC1C,GAAD,EAAMC,GAAN,EAAc;AACxC,MAAM0C,SAAS,GAAG3C,GAAG,CAACmB,MAAtB;AACA,MAAIjB,QAAQ,GAAG,IAAf;;AACA,MAAMgB,QAAQ,GAAGP,qBAAYC,KAAZ,CAAkBC,IAAlB,CAAuB,UAAAH,IAAI;AAAA,WAAIA,IAAI,CAACU,EAAL,KAAYG,QAAQ,CAACoB,SAAS,CAACvB,EAAX,CAAxB;AAAA,GAA3B,CAAjB,CAHwC,CAIxC;;;AACAF,EAAAA,QAAQ,CAACb,MAAT,GAAkBL,GAAG,CAAC4C,KAAJ,CAAUvC,MAA5B,CALwC,CAMxC;;AACAH,EAAAA,QAAQ,GAAG;AACTG,IAAAA,MAAM,EAAE,GADC;AAETG,IAAAA,IAAI,EAAE;AACJY,MAAAA,EAAE,EAAEF,QAAQ,CAACE,EADT;AAEJK,MAAAA,IAAI,EAAEP,QAAQ,CAACoB,KAFX;AAGJL,MAAAA,SAAS,EAAEf,QAAQ,CAACe,SAHhB;AAIJ5B,MAAAA,MAAM,EAAEa,QAAQ,CAACb,MAJb;AAKJE,MAAAA,MAAM,EAAEW,QAAQ,CAACX,MALb;AAMJoB,MAAAA,KAAK,EAAET,QAAQ,CAACS,KANZ;AAOJD,MAAAA,MAAM,EAAER,QAAQ,CAACQ,MAPb;AAQJc,MAAAA,mBAAmB,EAAEtB,QAAQ,CAACsB,mBAR1B;AASJR,MAAAA,OAAO,EAAEd,QAAQ,CAACc,OATd;AAUJS,MAAAA,QAAQ,EAAEvB,QAAQ,CAACuB;AAVf;AAFG,GAAX;AAeAxC,EAAAA,GAAG,CAACI,MAAJ,CAAWH,QAAQ,CAACG,MAApB,EAA4BU,IAA5B,CAAiCb,QAAjC;AACD,CAvBM;;;;AAwBA,IAAM2C,YAAY,GAAG,SAAfA,YAAe,CAAC7C,GAAD,EAAMC,GAAN,EAAc;AACxC,MAAM6C,UAAU,GAAG9C,GAAG,CAAC4C,KAAvB;AACA,MAAIG,eAAe,GAAG,IAAtB;;AACA,MAAID,UAAU,CAACzC,MAAX,KAAsBC,SAAtB,IAAmCwC,UAAU,CAACvC,MAAX,KAAsBD,SAA7D,EAAwE;AACtEyC,IAAAA,eAAe,GAAGpC,qBAAYC,KAA9B;AACD,GAFD,MAEO;AACLmC,IAAAA,eAAe,GAAGpC,qBAAYC,KAAZ,CAAkBC,IAAlB,CAAuB,UAAAH,IAAI;AAAA,aAAIA,IAAI,CAACL,MAAL,KAAgByC,UAAU,CAACzC,MAA3B,IAAqCK,IAAI,CAACH,MAAL,MAAiBuC,UAAU,CAACvC,MAAX,KAAsB,MAAvC,CAAzC;AAAA,KAA3B,CAAlB;AACD;;AACDN,EAAAA,GAAG,CAACc,IAAJ,CAASgC,eAAT;AACD,CATM","sourcesContent":["import quickcredit from '../models/database';\r\nimport { isVerified } from '../helpers/userAccount';\r\nimport { hasLoan, installementCalculator, interestCalculator } from '../helpers/Loans';\r\nexport const loadByCriteria = (req, res) => {\r\n  let response = {};\r\n  const criterias = req.body;\r\n\r\n  // find loan with specific criterias\r\n  if (criterias.status === undefined || criterias.repaid === undefined) {\r\n    response = {\r\n      status: 400,\r\n      data: {\r\n        message: 'bad request, there might be some missing parameters',\r\n      },\r\n    };\r\n  } else {\r\n    const loan = quickcredit.loans.find(debt => debt.status === criterias.status && debt.repaid === criterias.repaid);\r\n    if (loan === undefined) {\r\n      response = {\r\n        status: 200,\r\n        data: {\r\n          message: 'no data found',\r\n        },\r\n      };\r\n    } else {\r\n    // specific loan loading response\r\n      response = {\r\n        status: 200,\r\n        data: loan,\r\n      };\r\n    }\r\n  }\r\n  res.status(response.status).json(response);\r\n};\r\nexport const loadLoans = (req, res) => {\r\n  if (req.body.status === undefined && req.body.repaid === undefined) {\r\n    res.json(quickcredit.loans);\r\n  } else {\r\n    loadByCriteria(req, res);\r\n  }\r\n};\r\nexport const loanById = (req, res) => {\r\n  const loanInfo = quickcredit.loans;\r\n  let response = null;\r\n  if (req.params.id === undefined) {\r\n    response = {\r\n      status: 400,\r\n      data: {\r\n        message: 'bad request, id must be defined',\r\n      },\r\n    };\r\n  } else {\r\n    const loanid = req.params.id;\r\n    const specificLoan = loanInfo.find(loan => loan.id === parseInt(loanid));\r\n    if (specificLoan === undefined) {\r\n      response = {\r\n        status: 200,\r\n        data: {\r\n          message: 'no data found',\r\n        },\r\n      };\r\n    } else {\r\n      response = {\r\n        status: 200,\r\n        data: specificLoan,\r\n      };\r\n    }\r\n  }\r\n  res.status(response.status).json(response);\r\n};\r\nexport const apply = (req, res) => {\r\n  const loan = req.body;\r\n  let response = null;\r\n  if (loan.user === undefined || loan.amount === undefined || loan.tenor === undefined) {\r\n    response = {\r\n      status: 400,\r\n      data: {\r\n        message: 'Bad request, there might be some missing parameters',\r\n      },\r\n    };\r\n  } else {\r\n  // increment loan id for the next loan\r\n    const userInfo = quickcredit.users.find(user => user.token === loan.user);\r\n    loan.id = quickcredit.loans.length + 1;\r\n    loan.balance = loan.amount;\r\n    loan.repaid = false;\r\n    loan.status = 'pending';\r\n    loan.createdOn = new Date();\r\n    // push or add loan to an array of loans\r\n    if (!isVerified(loan.user)) {\r\n      response = {\r\n        status: 200,\r\n        data: {\r\n          message: 'sorry your account not yet verified, wait for a moment',\r\n        },\r\n      };\r\n    } else if (hasLoan(loan.user)) {\r\n      response = {\r\n        status: 200,\r\n        data: {\r\n          message: 'sorry you already have a loan',\r\n        },\r\n      };\r\n    } else {\r\n      quickcredit.loans.push(loan);\r\n      // response generate\r\n      response = {\r\n        status: 200,\r\n        data: {\r\n          id: loan.id,\r\n          user: userInfo.token,\r\n          firstName: userInfo.firstName,\r\n          lastName: userInfo.lastName,\r\n          email: userInfo.email,\r\n          createdOn: new Date(),\r\n          status: 'pending',\r\n          repaid: false,\r\n          tenor: loan.tenor,\r\n          amount: parseFloat(loan.amount),\r\n          paymentInstallement: installementCalculator(loan.amount, loan.tenor),\r\n          balance: parseFloat(loan.amount),\r\n          interest: interestCalculator(loan.interest),\r\n        },\r\n      };\r\n    }\r\n  }\r\n  res.status(response.status).json(response);\r\n};\r\nexport const toggleStatus = (req, res) => {\r\n  const loanParam = req.params;\r\n  let response = null;\r\n  const loanInfo = quickcredit.loans.find(loan => loan.id === parseInt(loanParam.id));\r\n  // const loanIndex = quickcredit.loans.findIndex(loan => loan.id === parseInt(loanParam.id));\r\n  loanInfo.status = req.query.status;\r\n  // response generate\r\n  response = {\r\n    status: 200,\r\n    data: {\r\n      id: loanInfo.id,\r\n      user: loanInfo.email,\r\n      createdOn: loanInfo.createdOn,\r\n      status: loanInfo.status,\r\n      repaid: loanInfo.repaid,\r\n      tenor: loanInfo.tenor,\r\n      amount: loanInfo.amount,\r\n      paymentInstallement: loanInfo.paymentInstallement,\r\n      balance: loanInfo.balance,\r\n      interest: loanInfo.interest,\r\n    },\r\n  };\r\n  res.status(response.status).json(response);\r\n};\r\nexport const applications = (req, res) => {\r\n  const parameters = req.query;\r\n  let loanApplication = null;\r\n  if (parameters.status === undefined && parameters.repaid === undefined) {\r\n    loanApplication = quickcredit.loans;\r\n  } else {\r\n    loanApplication = quickcredit.loans.find(loan => loan.status === parameters.status && loan.repaid === (parameters.repaid === 'true'));\r\n  }\r\n  res.json(loanApplication);\r\n};\r\n"],"file":"Loans.js"}